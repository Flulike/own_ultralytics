# Ultralytics üöÄ AGPL-3.0 License - https://ultralytics.com/license

# Ultralytics YOLO11-Gated object detection model with enhanced gated mechanisms
# Enhanced with GatedA2C2f and AdaptiveGatedC3k2 modules
# ‚≠ê OPTIMIZED FOR VISDRONE DATASET: Aerial small object detection ‚≠ê
# Parameters can be auto-configured by model scale OR manually specified in config file

# Parameters
nc: 10 # VisDrone classes: pedestrian, people, bicycle, car, van, truck, tricycle, awning-tricycle, bus, motor
scales: # model compound scaling constants, i.e. 'model=yolo11n-gated.yaml' will call this with scale 'n'
  # [depth, width, max_channels]
  # Gated parameters can be auto-configured OR manually specified:
  # 
  # AUTO-CONFIG (by model scale) - VisDrone optimized:
  # n: adaptive_mode='traditional', gate_threshold=0.3, area=2 (efficiency with small object focus)
  # s: gate_ratio=0.2, adaptive_mode='auto', gate_threshold=0.3, area=2 (balanced small object detection)
  # m: gate_ratio=0.3, adaptive_mode='auto', gate_threshold=0.4, area=4 (enhanced small object recall)  
  # l/x: gate_ratio=0.4, adaptive_mode='gated', gate_threshold=0.5, area=4 (maximum small object precision)
  #
  # MANUAL CONFIG (in backbone/head args):
  # GatedA2C2f: [c_out, shortcut, gate_ratio, area]
  # AdaptiveGatedC3k2: [c_out, shortcut, adaptive_mode, gate_threshold, area]
  n: [0.50, 0.25, 1024]
  s: [0.50, 0.50, 1024] 
  m: [0.50, 1.00, 512]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.50, 512]

# YOLO11n-Gated backbone with auto-configured gated enhancements
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4
  
  # Early layers use traditional modules for efficiency
  - [-1, 2, C3k2, [256, False, 0.25]] # 2
  - [-1, 1, CED, [256, 0.5]] # 3-P3/8 (custom downsampling)
  
  # Middle layers introduce adaptive gating (mix of auto and manual config)
  - [-1, 2, AdaptiveGatedC3k2, [512, False]] # 4 (auto-configured based on scale)
  - [-1, 1, CED, [512, 0.5]] # 5-P4/16
  
  # Deeper layers use adaptive gating with VisDrone tuning for small objects
  - [-1, 2, AdaptiveGatedC3k2, [512, True, 'auto', 0.4, 4]] # 6 (VisDrone: lower threshold, finer spatial attention)
  - [-1, 1, CED, [1024, 0.5]] # 7-P5/32
  
  # Deepest layers use enhanced gating optimized for aerial detection
  - [-1, 2, GatedA2C2f, [1024, True, 0.5, 4]] # 8 (VisDrone: moderate gating, maximum spatial detail)
  - [-1, 1, SPPF, [1024, 5]] # 9
  - [-1, 2, C2PSA, [1024]] # 10 (attention mechanism)

# YOLO11n-Gated head with strategic gated placement
head:
  # P4 upsampling path - enhanced gating for medium vehicles (cars, vans)
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 6], 1, Concat, [1]] # cat backbone P4
  - [-1, 2, GatedA2C2f, [512, False, 0.4, 2]] # 13 (VisDrone: moderate gating for vehicle detection)

  # P3 upsampling path - ‚≠ê CRITICAL for VisDrone small object detection ‚≠ê
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 4], 1, Concat, [1]] # cat backbone P3
  - [-1, 3, GatedA2C2f, [256, False, 0.2, 8]] # 16 (P3/8-small) VisDrone: minimal gating, finest spatial attention, extra processing

  # P4 downsampling path - adaptive selection for dense urban scenes
  - [-1, 1, WaveletDownsampleWrapper, [256]] # custom wavelet downsampling
  - [[-1, 13], 1, Concat, [1]] # cat head P4
  - [-1, 2, AdaptiveGatedC3k2, [512, False, 'gated', 0.3, 4]] # 19 (VisDrone: forced gating, lower threshold, finer spatial attention)

  # P5 downsampling path - traditional for large vehicles (buses, trucks) in aerial view
  - [-1, 1, WaveletDownsampleWrapper, [512]]
  - [[-1, 10], 1, Concat, [1]] # cat head P5  
  - [-1, 2, C3k2, [1024, True]] # 22 (P5/32-large) traditional high efficiency for large vehicles

  - [[16, 19, 22], 1, Detect, [nc]] # Detect(P3, P4, P5)

# Configuration Options:
# 
# üîß MANUAL CONFIGURATION SYNTAX:
# 
# GatedA2C2f:
#   Auto:   [c_out, shortcut]                          # Uses scale-based defaults
#   Manual: [c_out, shortcut, gate_ratio, area]        # Custom parameters
#   
#   - gate_ratio: 0.1-1.0 (how much gating to apply, higher = more gating)
#   - area: 1, 2, 4 (spatial attention area division, higher = more spatial detail)
#
# AdaptiveGatedC3k2:  
#   Auto:   [c_out, shortcut]                                      # Uses scale-based defaults
#   Manual: [c_out, shortcut, adaptive_mode, gate_threshold, area] # Custom parameters
#   
#   - adaptive_mode: 'traditional', 'auto', 'gated' (processing mode)
#   - gate_threshold: 0.0-1.0 (threshold for auto mode switching)
#   - area: 1, 2, 4 (spatial attention area, higher = more detail)
#
# üìä AUTO-CONFIGURATION BY SCALE (VisDrone optimized):
# - n: Small object focus (traditional mode, area=2 for spatial detail)
# - s/m: Balanced small object detection (auto mode, moderate gating, area=2-4) 
# - l/x: Maximum small object performance (gated mode, lower gate ratios, area=4)
#
# üí° VISDRONE OPTIMIZATION TIPS:
# - P3 layer is CRITICAL: Use minimal gating (0.2), maximum spatial detail (area=8)
# - Lower gate_ratio values (0.2-0.4) preserve fine-grained features for small objects
# - Higher area values (4-8) provide better spatial localization for aerial detection
# - Extra processing layers (repeats=3) on P3 for enhanced small object recall
# - Forced gating mode on P4 for handling dense urban scenarios
# - Optimized for: pedestrians, bicycles, small vehicles in aerial imagery