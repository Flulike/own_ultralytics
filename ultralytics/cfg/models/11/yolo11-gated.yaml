# Ultralytics 🚀 AGPL-3.0 License - https://ultralytics.com/license

# Ultralytics YOLO11-Gated object detection model with enhanced gated mechanisms
# Enhanced with GatedA2C2f and AdaptiveGatedC3k2 modules
# Based on YOLO11 architecture with progressive gated enhancements

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolo11n-gated.yaml' will call this with scale 'n'
  # [depth, width, max_channels]
  n: [0.50, 0.25, 1024]
  s: [0.50, 0.50, 1024] 
  m: [0.50, 1.00, 512]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.50, 512]

# YOLO11n-Gated backbone with selective gated enhancements
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4
  
  # 早期层使用传统模块保持效率
  - [-1, 2, C3k2, [256, False, 0.25]] # 2
  - [-1, 1, CED, [256, 0.5]] # 3-P3/8 (保持你的 CED 下采样)
  
  # 中间层开始引入门控机制
  - [-1, 2, AdaptiveGatedC3k2, [512, False]] # 4 使用默认参数
  - [-1, 1, CED, [512, 0.5]] # 5-P4/16
  
  # 深层使用自适应门控
  - [-1, 2, AdaptiveGatedC3k2, [512, True]] # 6 自适应模式
  - [-1, 1, CED, [1024, 0.5]] # 7-P5/32
  
  # 最深层使用增强门控
  - [-1, 2, GatedA2C2f, [1024, True]] # 8 使用shortcut
  - [-1, 1, SPPF, [1024, 5]] # 9
  - [-1, 2, C2PSA, [1024]] # 10 (保持你的注意力机制)

# YOLO11n-Gated head with strategic gated placement
head:
  # P4 上采样路径 - 使用门控增强中等尺度特征
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 6], 1, Concat, [1]] # cat backbone P4
  - [-1, 2, GatedA2C2f, [512, False]] # 13 门控增强 P4

  # P3 上采样路径 - 门控增强小目标检测  
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 4], 1, Concat, [1]] # cat backbone P3
  - [-1, 2, GatedA2C2f, [256, False]] # 16 (P3/8-small) 门控增强小目标

  # P4 下采样路径 - 自适应选择
  - [-1, 1, WaveletDownsampleWrapper, [256]] # 保持你的小波下采样
  - [[-1, 13], 1, Concat, [1]] # cat head P4
  - [-1, 2, AdaptiveGatedC3k2, [512, False]] # 19 自适应处理

  # P5 下采样路径 - 传统模块保持效率
  - [-1, 1, WaveletDownsampleWrapper, [512]]
  - [[-1, 10], 1, Concat, [1]] # cat head P5  
  - [-1, 2, C3k2, [1024, True]] # 22 (P5/32-large) 大目标保持传统高效

  - [[16, 19, 22], 1, Detect, [nc]] # Detect(P3, P4, P5) 